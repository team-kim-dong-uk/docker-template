image: docker:stable
services:
  - docker:stable-dind

before_script:
  - apk add --no-cache curl jq python py-pip
  - pip install awscli
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set region $AWS_DEFAULT_REGION
  - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPO
  #- $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")
#  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

#include:
#  - template: AWS/Deploy-ECS.gitlab-ci.yml

stages:
  - build jar
  - build and push docker image
  - ecr
  - deploy

build:
  #image: openjdk:11-jre-slim
  #image: gradle:5.3.0-jdk-alpine
  image: gradle:7.1.1-jdk11
  stage: build jar

  before_script:
    #- source .${CI_COMMIT_REF_NAME}.env
    - source .dev.env
  script:
    #- ./gradlew tasks --info
    - rm -rf .gradle
    - ./gradlew bootJar -Dspring.profiles.active=$SPRING_ACTIVE_PROFILE --stacktrace
  artifacts:
    paths:
      - build/libs/*.jar

docker build:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"

  stage: build and push docker image
  #stage: build job
  before_script:
    #- source .${CI_COMMIT_REF_NAME}.env
    - source .dev.env
  script:
    - docker build --platform linux/amd64 --build-arg SRPING_ACTIVE_PROFILE=$SRPING_ACTIVE_PROFILE -t $AWS_ECR_REPO:latest .
    #- docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker push $AWS_ECR_REPO:latest
  #tags:
    #- build-docker
  only:
    - dev

ecr:
  stage: ecr

  before_script:
    #- source .${CI_COMMIT_REF_NAME}.env
    - source .dev.env
  script:
    - docker build --platform linux/amd64 --build-arg SRPING_ACTIVE_PROFILE=$SRPING_ACTIVE_PROFILE -t $AWS_ECR_REPO:latest .
    #- docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker push $AWS_ECR_REPO:latest
  only:
    - ecs-master



deploy:
  #image: ubuntu:latest
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  stage: deploy
    #- echo "$ENV_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    #- source .${CI_COMMIT_REF_NAME}.env

  script:
    - aws ecs register-task-definition --cli-input-json file://./t-d-1.json
    - aws ecs update-service --region "$AWS_DEFAULT_REGION" --cluster "$CI_AWS_ECS_CLUSTER" --service "$CI_AWS_SERVICE_NAME"  --task-definition "$CI_AWS_ECS_TASK_DEFINITION"

    #- ssh ec2-user@$DEPLOY_SERVER "sudo systemctl start docker;
      #docker stop $APP_NAME;
      #docker system prune -a -f;
      #docker pull $DOCKER_REPO;
      #docker container run -d --name $APP_NAME -p $PORT:8080 -e SPRING_PROFILES_ACTIVE=$SPRING_ACTIVE_PROFILE $DOCKER_REPO"
